#!/usr/bin/python
import sys
from commands import getoutput
import time
import signal
from urllib2 import urlopen
import subprocess

class bcolors:
    BLUE = '\033[94m'
    GREEN = '\033[92m'
    RED = '\033[31m'
    YELLOW = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    BGRED = '\033[41m'
    WHITE = '\033[37m'
    CYAN = '\033[36m'


def timelog():
	current_time = time.localtime()
	ctime = time.strftime('%H:%M:%S', current_time)
	return "["+ ctime + "]"

def shutdown():
	print ""
	print bcolors.BGRED + bcolors.WHITE + timelog() + "[info] shutting down torphantom" + bcolors.ENDC +"\n\n"
	sys.exit()


def sigint_handler(signum, frame):
    print '\n user interrupt ! shutting down'
    shutdown()

def logo():
	subprocess.call(["clear"])
	print bcolors.CYAN + bcolors.BOLD
	print """
	  _______         _____  _                 _
	 |__   __|       |  __ \| |               | |
	    | | ___  _ __| |__) | |__   __ _ _ __ | |_ ___  _ __ ___
	    | |/ _ \| '__|  ___/| '_ \ / _` | '_ \| __/ _ \| '_ ` _ \\
	    | | (_) | |  | |    | | | | (_| | | | | || (_) | | | | | |
	    |_|\___/|_|  |_|    |_| |_|\__,_|_| |_|\__\___/|_| |_| |_|
		v0.9 - 3ndG4me | www.injecti0n.org

    """
	print bcolors.ENDC
def usage():
	logo()
	print """

	USAGE:
        torphantom start -----(start torphantom)
	torphantom start -i <interface(s)> -----(start with macchanger)
        torphantom stop  -----(stop torphantom)

    """
	sys.exit()

def internet_on():

	while True:
		try:
			urlopen('https://check.torproject.org/', timeout=1)
	        	return True
		except :
			continue
		break

def tor_status():
		status_message = subprocess.check_output("curl --socks5 localhost:9050 --socks5-hostname localhost:9050 -s https://check.torproject.org/ | cat | grep -m 1 Congratulations | xargs", shell=True)
		if(status_message):
			return True
		else:
			return False

def ip():
	if(internet_on() and tor_status()):
		ipadd = "Tor is enabled\n" + subprocess.check_output("curl --socks5 localhost:9050 --socks5-hostname localhost:9050 -s https://check.torproject.org/ | cat | grep -m 1 IP | xargs | sed 's/<[^>]*>//g'", shell=True)
	elif (internet_on() and not tor_status()):
		ipadd = "Tor is disabled\nYour IP address appears to be: " + subprocess.check_output("curl -s ipinfo.io/ip", shell=True)
	return ipadd



signal.signal(signal.SIGINT, sigint_handler)

def change_macaddr(interfaces):
	print timelog()+" Changing MAC Addresses..."
	for interface in interfaces:
		print timelog() + bcolors.BLUE + bcolors.BOLD + " Changing: " + interface + bcolors.ENDC
		subprocess.call(["macchanger", "-r" , interface])
		subprocess.call(["ifconfig", interface ,"down"])
		subprocess.call(["ifconfig", interface ,"up"])
	print timelog()+bcolors.GREEN+" MAC Addresses changed"+bcolors.ENDC

def start_torphantom():

	print timelog()+" configuring proxy",

	proxy_setup = """
		sudo networksetup -setsocksfirewallproxy Wi-Fi 127.0.0.1 9050 off
    	sudo networksetup -setsocksfirewallproxystate Wi-Fi on
    	"""
	subprocess.call(proxy_setup, shell=True)
	print bcolors.GREEN+"[done]"+bcolors.ENDC
	print timelog()+" starting tor",
	subprocess.call("tor --quiet &", shell=True)
	print bcolors.GREEN+"[done]"+bcolors.ENDC
	print timelog()+" Fetching current status and IP..."
	print timelog()+" CURRENT STATUS AND IP : "+bcolors.GREEN+ip()+bcolors.ENDC

def stop_torphantom():
	print bcolors.RED+timelog()+" STOPPING torphantom"+bcolors.ENDC
	print timelog()+" stopping tor",
	subprocess.call(["sudo", "pkill", "tor"])
	print bcolors.GREEN+"[done]"+bcolors.ENDC
	print timelog()+" disabling proxy",
	subprocess.call("sudo networksetup -setsocksfirewallproxystate Wi-Fi off", shell=True)
	print bcolors.GREEN+"[done]"+bcolors.ENDC
	print timelog()+" Fetching current status and IP..."
	print timelog()+" CURRENT STATUS AND IP : "+bcolors.GREEN+ip()+bcolors.ENDC

arg = sys.argv[1:]


if len(arg) >= 1:
	if sys.argv[1] == "start":
		logo()
		if len(arg) >= 2:
			if sys.argv[2] == "-i":
				interfaces = []
				for interface in sys.argv[3:]:
					interfaces.append(interface)
				change_macaddr(interfaces)

		start_torphantom()
	elif sys.argv[1] == "stop":
		logo()
		stop_torphantom()
else:
	usage()
